#for (intercept, coef) in zip(clf.intercept_, clf.coef_):
#    s = "y = {0:.3f}".format(intercept)
#    for (i, c) in enumerate(coef):
#        s += " + {0:.3f} * x{1}".format(c, i)

    #print(s)
print(train_pred)

plot_decision_regions(X=X.values,
                      y=y.values,
                      clf=clf,
                      legend=2)

plt.xlabel(X.columns[0], size=14)
plt.ylabel(X.columns[1], size=14)
plt.title('SVM Decision Region Boundary', size=16)



w = clf.coef_[0]
a = -w[0]/w[1]
xx = np.linspace(min(X[:,0]),max(X[:,0]))
yy = a*xx - clf.intercept_[0]/w[1]

h0 = plt.plot(xx,yy,"k-",label = "non-weighted")
plt.scatter(X[:,0],X[:,1])
plt.ylabel("cash-ratio")
plt.xlabel("return-on-equity")
plt.legend()
plt.show()